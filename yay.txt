CHARLES THOMAS WALLACE TRUSCOTT WATTERS: MASSACHUSETTS INSTITUTE OF TECHNOLOGY 2022

CHARLES THOMAS WALLACE TRUSCOTT WATTERS: MASSACHUSETTS INSTITUTE OF TECHNOLOGY 2022

CHARLES THOMAS WALLACE TRUSCOTT WATTERS: MASSACHUSETTS INSTITUTE OF TECHNOLOGY 2022

CHARLES THOMAS WALLACE TRUSCOTT WATTERS: MASSACHUSETTS INSTITUTE OF TECHNOLOGY 2022

CHARLES THOMAS WALLACE TRUSCOTT WATTERS: MASSACHUSETTS INSTITUTE OF TECHNOLOGY 2022

MIT 6.0001, cspy

Guttag, Grimson, Bell


declarative vs imperative knowledge
int, float, string, set, tuple, list, dictionary, boolean, class, object, method, function, function invocation, combination of types, expression
+ - * / // % ** ( ) != == and, or, not > >= < <= & | ^ ~ << >> . * ** [ ] [:] [::] [ ][ ][ ]x : , =
Addition
Subtraction
Multiplication
True Division
Floor Division
Remainder or Modulus
Exponentiation
Parentheses

Inequality
Equality

Logical AND
Logical OR
Logical NOT

Greater-than
Greater-than or Equal-to
Less-than
Less-than or Equal-to

Bitwise AND
Bitwise OR
Bitwise XOR
Bitwise NOT

Left Shift
Right Shift

Dot Operator
Unpacking Operator
Packing Operator

Subscript Operator
Subscript Operator with Splice
Subscript Operator with Double Splice
Arbitrary Length Subscript Operator

Colon Operator
Comma Operator
Assignment Operator / Equals Operator

True, False, lambda x, y: x + y, yield, from x import y as z
assert, global, nonlocal, pass, del
break, continue, is, is not, in, else

try:

except Error:

finally:

else:

Error as e, e.method

def function(args):
	body
	return

abstraction, decomposition

def main():
	body
	return

if __name__ == "__main__": main()

for x in range(start, stop, step):
for x in iterable: (e.g. list, tuple, string, dictionary, combined type, set)

for a in x:
	for b in x:

for a in x:
	for b in y:

while(Boolean):
	while(Boolean):

def recursive_function(a, b):
	base case 1:
	base case 2:
	base case x:
	body
	recursive call
	return

iteration, recursion

if (Boolean):
	if (Boolean):
		if (Boolean):
		elif (Boolean):
		elif (Boolean):
		else:
	elif (Boolean):
	elif (Boolean):
	else:
elif (Boolean):
elif (Boolean):
else:

if x and y and z:
elif (x and y) or (not z):
elif (not x and not y):
else:

match (object):
	case x:
		body
	case y:
		body
	case z:
		body

branching, control flow

Algorithmic Complexity, Standard Library, Approximation, sorting and searching, Program Definition, Req's analysis and System Theory, Object Oriented Programming Def'ns


ALGORITHMIC COMPLEXITY

	- random access machine

	- step

	- time constraint

	- size of input arbitrarily taken

	- dominant algebraic term in order of growth

	- running time (actual / conceptual)

		- best case, worst case, average case

		- lower bound, upper bound

	- counting variables, operators, operations, loops, branches, iterations, recursions

	- operation as dominant algebraic term toward O(n) or theta(n)

	- O(n), asymptotic notation, Big O n -> infinity

	- theta(n), theta notation, n -> 0 and n -> infinity and n -> any given value

constant, linear, logarithmic, log linear, polynomial, exponential, graphs, counting steps of dominant and non-dominant operations, operators






STANDARD LIBRARY


string
textwrap
re
difflib

enum
collections
array
heapq
bisect
queue
struct
weakref
copy
pprint

functools
itertools
operator
contextlib

time
datetime
calendar

decimal
fractions
random
math
statistics
numpy
pandas
matplotlib

os.path
pathlib
glob
fnmatch
linecache
tempfile
shutil
filecmp
mmap
codecs
io

pickle
shelve
dbm
sqlite3
xml.etree.ElementTree
csv

zlib
gzip
bz2
tarfile
zipfile

hmac
hashlib

subprocess
signal
threading
multiprocessing
asyncio
concurrent.futures

gettext
locale

site
sys
os
platform
resource
gc
sysconfig

socket
urllib3

scipy
sklearn
tensorflow
keras


Exhaustive Enumeration, Bisection Search, Newton-Raphson, Bubble Sort, Permutation Sort, Selection Sort, Merge Sort

Optimisation, Statistics, Simulation

Greedy Algorithms, Graph Theoretic Algorithms, Binary Trees, Random Walks, Monte Carlo Inference (6.0002)
